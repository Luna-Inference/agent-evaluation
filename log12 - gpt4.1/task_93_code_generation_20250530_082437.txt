
================================================================================
Task 93/183: Create a JavaScript class for a simple shopping cart with add, remove, and calculate total methods.
Category: Creative & Generation Tasks | Type: code-generation | Difficulty: medium
================================================================================

╭─────────────────────────────────────────────────────────────────────────────────── New run ───────────────────────────────────────────────────────────────────────────────────╮
│                                                                                                                                                                               │
│ Create a JavaScript class for a simple shopping cart with add, remove, and calculate total methods.                                                                           │
│                                                                                                                                                                               │
╰─ LiteLLMModel - azure/gpt-4.1 ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Step 1 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Output message of the LLM: ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
Thought: I need to generate code for a JavaScript class that represents a simple shopping cart with three methods: add (to add items), remove (to remove items by some           
criterion), and calculateTotal (to sum item prices). I will write and output the code for such a class and then return it as my final answer.                                    
                                                                                                                                                                                 
Code:                                                                                                                                                                            
```py                                                                                                                                                                            
js_code = """                                                                                                                                                                    
class ShoppingCart {                                                                                                                                                             
    constructor() {                                                                                                                                                              
        this.items = [];                                                                                                                                                         
    }                                                                                                                                                                            
                                                                                                                                                                                 
    // Add an item as an object: { name: string, price: number }                                                                                                                 
    add(item) {                                                                                                                                                                  
        this.items.push(item);                                                                                                                                                   
    }                                                                                                                                                                            
                                                                                                                                                                                 
    // Remove the first match of an item by its 'name'                                                                                                                           
    remove(itemName) {                                                                                                                                                           
        const index = this.items.findIndex(item => item.name === itemName);                                                                                                      
        if (index !== -1) {                                                                                                                                                      
            this.items.splice(index, 1);                                                                                                                                         
        }                                                                                                                                                                        
    }                                                                                                                                                                            
                                                                                                                                                                                 
    // Calculate the total price of all items in the cart                                                                                                                        
    calculateTotal() {                                                                                                                                                           
        return this.items.reduce((acc, item) => acc + item.price, 0);                                                                                                            
    }                                                                                                                                                                            
}                                                                                                                                                                                
"""                                                                                                                                                                              
final_answer(js_code)                                                                                                                                                            
```                                                                                                                                                                              
 ─ Executing parsed code: ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── 
  js_code = """                                                                                                                                                                  
  class ShoppingCart {                                                                                                                                                           
      constructor() {                                                                                                                                                            
          this.items = [];                                                                                                                                                       
      }                                                                                                                                                                          
                                                                                                                                                                                 
      // Add an item as an object: { name: string, price: number }                                                                                                               
      add(item) {                                                                                                                                                                
          this.items.push(item);                                                                                                                                                 
      }                                                                                                                                                                          
                                                                                                                                                                                 
      // Remove the first match of an item by its 'name'                                                                                                                         
      remove(itemName) {                                                                                                                                                         
          const index = this.items.findIndex(item => item.name === itemName);                                                                                                    
          if (index !== -1) {                                                                                                                                                    
              this.items.splice(index, 1);                                                                                                                                       
          }                                                                                                                                                                      
      }                                                                                                                                                                          
                                                                                                                                                                                 
      // Calculate the total price of all items in the cart                                                                                                                      
      calculateTotal() {                                                                                                                                                         
          return this.items.reduce((acc, item) => acc + item.price, 0);                                                                                                          
      }                                                                                                                                                                          
  }                                                                                                                                                                              
  """                                                                                                                                                                            
  final_answer(js_code)                                                                                                                                                          
 ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── 
Out - Final answer: 
class ShoppingCart {
    constructor() {
        this.items = [];
    }

    // Add an item as an object: { name: string, price: number }
    add(item) {
        this.items.push(item);
    }

    // Remove the first match of an item by its 'name'
    remove(itemName) {
        const index = this.items.findIndex(item => item.name === itemName);
        if (index !== -1) {
            this.items.splice(index, 1);
        }
    }

    // Calculate the total price of all items in the cart
    calculateTotal() {
        return this.items.reduce((acc, item) => acc + item.price, 0);
    }
}

[Step 1: Duration 1.74 seconds| Input tokens: 2,069 | Output tokens: 226]

Output:

class ShoppingCart {
    constructor() {
        this.items = [];
    }

    // Add an item as an object: { name: string, price: number }
    add(item) {
        this.items.push(item);
    }

    // Remove the first match of an item by its 'name'
    remove(itemName) {
        const index = this.items.findIndex(item => item.name === itemName);
        if (index !== -1) {
            this.items.splice(index, 1);
        }
    }

    // Calculate the total price of all items in the cart
    calculateTotal() {
        return this.items.reduce((acc, item) => acc + item.price, 0);
    }
}


Task 93 complete.
------------------------------------------------------------
